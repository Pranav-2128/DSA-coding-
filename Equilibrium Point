import java.io.*;
import java.util.*;
import java.util.stream.*;

class Main 
{
    public static void main(String[] args) throws IOException 
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while (t-- > 0) 
        {
            int n = Integer.parseInt(br.readLine().trim());
            long arr[] = new long[n];
            String inputLine[] = br.readLine().trim().split(" ");
            
            for (int i = 0; i < n; i++) 
            {
                arr[i] = Long.parseLong(inputLine[i]);
            }
            Solution ob = new Solution();
            System.out.println(ob.equilibriumPoint(arr, n));
        }
    }
}
class Solution 
{
    public static int equilibriumPoint(long arr[], int n) 
    {
        if (n == 1) 
        {
            return (int) arr[0];
        }

        if (n == 2) 
        {
            return -1;
        }

        long totalsum = 0;

        for (int i = 0; i < arr.length; i++) 
        {
            totalsum += arr[i];
        }

        long leftsum = 0;
        long rightsum = 0;
        long prefixsum = 0;
        for (int i = 0; i < arr.length; i++) 
        {
            prefixsum += arr[i];
            leftsum = prefixsum - arr[i];
            rightsum = totalsum - leftsum - arr[i];

            if (leftsum == rightsum) 
            {
                return i+1;
            }
        }
        return -1;
    }
}
