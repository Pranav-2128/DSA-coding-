import java.io.*;
import java.util.*;

class Solution 
{
    int longSubarrWthSumDivByK(int[] arr, int n, int k) 
    {
        HashMap<Integer, Integer> mp = new HashMap<>();
        int ans = 0, sum = 0;
        mp.put(0, -1);
        for (int i = 0; i < n; i++) 
        {
            sum += arr[i];
            int r = sum % k;
            if (r < 0)
            {
                r += k; 
            }
            if (!mp.containsKey(r))
            {
                mp.put(r, i);
            }
            else 
            {
                ans = Math.max(ans, i - mp.get(r));
            }
        }
        return ans;
    }
}

class GFG 
{
    public static void main (String[] args) throws IOException
    {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int testcases = Integer.parseInt(br.readLine());
		while(testcases-- > 0)
		{
		    String line1 = br.readLine();
		    String[] element = line1.trim().split("\\s+");
		    int sizeOfArray = Integer.parseInt(element[0]);
		    int K = Integer.parseInt(element[1]);
		    int arr [] = new int[sizeOfArray];
		    String line = br.readLine();
		    String[] elements = line.trim().split("\\s+");
		    
		    for(int i = 0; i<sizeOfArray; i++)
		    {
		        arr[i] = Integer.parseInt(elements[i]);
		    }
		    Solution obj = new Solution();
		    int res = obj.longSubarrWthSumDivByK(arr, sizeOfArray, K);
		    System.out.println(res);
		}
	}
}
