import java.io.*;
import java.util.*;

class GFG 
{
    public static void main(String args[]) throws IOException 
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t > 0) 
        {
            int rows = sc.nextInt();
            int columns = sc.nextInt();
            int matrix[][] = new int[rows][columns];
            for (int i = 0; i < rows; i++) 
            {
                for (int j = 0; j < columns; j++) 
                {
                    matrix[i][j] = sc.nextInt();
                }
            }
            int target = sc.nextInt();
            Solution x = new Solution();

            if (x.searchMatrix(matrix, target))
                System.out.println("true");
            else
                System.out.println("false");
            t--;

            System.out.println("~");
        }
    }
}

class Solution 
{
    public boolean searchMatrix(int[][] mat, int x) 
    {
        int ind = matbin(mat,x);
        if(ind == -1) return false;
        return isin(mat[ind],x);
        
    }
    int matbin(int arr[][],int x)
    {
        int l = 0;
        int h = arr.length-1;
        while(l <= h)
        {
            int mid = (l+h)/2;
            if(arr[mid][arr[mid].length-1]>=x && arr[mid][0]<=x||arr[mid][0]==x || arr[mid][arr[mid].length-1]==x) return mid;
            else if(arr[mid][arr[mid].length-1] >= x) h = mid-1;
            else l = mid+1;
        }
        return -1;
    }
    boolean isin(int arr[],int x)
    {
        int l = 0;
        int h = arr.length-1;
        while(l <= h)
        {
            int mid = (l+h)/2;
            if(arr[mid] == x) return true;
            else if(arr[mid] > x) h=mid-1;
            else l = mid+1;
        }
        return false;
    }
}
