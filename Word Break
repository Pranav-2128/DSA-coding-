import java.io.*;
import java.util.*;
public class GfG
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-->0)
        {
            int n;
            n = sc.nextInt();
            ArrayList<String> dictionary = new ArrayList<String>();
            for(int i = 0; i < n; i++)
            {
                String p = sc.next();
                dictionary.add(p);
            }
            String s = sc.next();
            Solution obj = new Solution();  
            System.out.println(obj.wordBreak(n, s, dictionary));  
        }
    }
}

class Solution
{
    public static int wordBreak(int n, String s, ArrayList<String> dictionary )
    {
        TreeSet<String> mp = new TreeSet<>();
        for(int i = 0; i < n; i++)
        {
            mp.add(dictionary.get(i));
        }
        
        ArrayList<Boolean> chake = new ArrayList<>();
        int len = s.length();
        for(int i = 0; i < len; i++)
        {
            chake.add(false);
        }
        chake.add(0,true);
        for(int i = 1; i <= len; i++)
        {
            for(int j = 0; j < len; j++)
            {
                if( chake.get(j)&&mp.contains(s.substring(j,i)) ) 
                {
                    chake.add(i,true);
                    break;
                }
            }
        }
        if(chake.get(len)) return 1;
        return 0;
    }
}
