import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        int t = Integer.parseInt(in.readLine().trim());
        
        while(t-- > 0)
        {
            String s[] = in.readLine().trim().split(" ");
            int n = Integer.parseInt(s[0]);
            int m = Integer.parseInt(s[1]);
            int a[][] = new int[n][m];
            
            s = in.readLine().trim().split(" ");
            
            int ind=0;
            
            for (int i = 0; i < n; i++) 
            {
                for (int j = 0; j < m; j++) 
                {
                    a[i][j] = Integer.parseInt(s[ind++]);
                }
            }
            
            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.boundaryTraversal(a, n, m);
            
            for (int i : ans) 
            {
                out.print(i + " ");
            }
            out.println();
        }
        out.close();
    }
}

class Solution
{
    static ArrayList<Integer> boundaryTraversal(int matrix[][], int n, int m)
    {
        ArrayList<Integer> arr= new ArrayList<Integer>();
        
        int a = 0;
        int b = 0;
        
        if(n == 1)
        {
            for(int j=0;j<m;j++)
            {
                arr.add(matrix[0][j]);
            }
            return arr;
        }
        
        if(m == 1)
        {
             for(int j = 0; j < n; j++)
            {
                arr.add(matrix[j][0]);
            }
            return arr;
        }
        
        for(int j = 0; j < m; j++)
        {
            arr.add(matrix[a][j]);
        }
        
        b = m - 1;
        
        for(int i = 1; i < n; i++)
        {
            arr.add(matrix[i][b]);
        }
        
        a = n - 1;
        
        for(int j = b - 1; j >= 0; j--)
        {
            arr.add(matrix[a][j]); 
        }

        for(int i = a - 1; i > 0;i--)
        {
            arr.add(matrix[i][0]); 
        }
        
        return arr;
    }
}
