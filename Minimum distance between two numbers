import java.io.*;
import java.util.*; 
class GFG
{
    public static void main(String[] args) throws IOException 
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());
        while (t-- > 0) 
        {
            int n = Integer.parseInt(br.readLine().trim());
            String[] str = br.readLine().trim().split(" ");
            int[] a = new int[n];
            for (int i = 0; i < n; i++) 
                a[i] = Integer.parseInt(str[i]);
            String[] xy = br.readLine().trim().split(" ");
            int x = Integer.parseInt(xy[0]);
            int y = Integer.parseInt(xy[1]);
            Solution g = new Solution();
            System.out.println(g.minDist(a, n, x, y));
        }
    }
}
class Solution 
{
    int minDist(int arr[], int n, int x, int y)
    {
        int dis = 0;
        int min = Integer.MAX_VALUE;
        int Ind = -1;
        for(int i = 0; i < n; i++)
        {
            if(arr[i] == x)
            {
                Ind = i;
            }
            else if(arr[i] == y && Ind != -1)
            {
                dis = i - Ind;
                min = Math.min(dis,min);
            }
        }
        Ind = -1;
         for(int i = 0; i < n; i++)
        {
            if(arr[i] == y)
            {
                Ind = i;
            }
            else if(arr[i] == x && Ind != -1)
            {
                dis = i - Ind;
                min = Math.min(dis,min);
            }
        }
        if(dis == 0)
        {
            return -1;
        }
        return min;
    }
}
