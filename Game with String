import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0)
        {
            String s = in.readLine();
            int k = Integer.parseInt(in.readLine());
            
            Solution ob = new Solution();
            System.out.println(ob.minValue(s, k));
        }
    }
}

class Solution
{
    static int minValue(String s, int k)
    {
     
        int[] freq = new int[26];
        for (char ch : s.toCharArray()) 
        {
            freq[ch - 'a']++;
        }
        
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        for (int i = 0; i < 26; i++) ]
        {
            if (freq[i] > 0) 
            {
                pq.add(freq[i]);
            }
        }
        
        while (k-- > 0) 
        {
            int top = pq.poll();
            if (top > 1) 
            {
                pq.add(top - 1);
            }
        }
      
        int minVal = 0;
        while (!pq.isEmpty()) 
        {
            int freqCount = pq.poll();
            minVal += freqCount * freqCount;
        }
        return minVal;
    }
}
