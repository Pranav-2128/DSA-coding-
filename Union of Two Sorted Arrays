import java.util.*;
import java.io.*;
import java.lang.*;

class Main
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t  =Integer.parseInt(read.readLine());
        
        while(t-- > 0)
        {
            String st[] = read.readLine().trim().split(" ");
            int N = Integer.parseInt(st[0]);
            int M = Integer.parseInt(st[1]);
            
            int arr1[] = new int[N];
            int arr2[] = new int[M];
            
            st = read.readLine().trim().split(" ");
            for(int i = 0; i < N; i++)
            {
                arr1[i] = Integer.parseInt(st[i]);
            }
            
            st = read.readLine().trim().split(" ");  
            for(int i = 0; i< M; i++)
            {
                arr2[i] = Integer.parseInt(st[i]);
            }
            
            Solution obj = new Solution();
            ArrayList<Integer> res = new ArrayList<Integer>();
            res = obj.findUnion(arr1, arr2, N, M);
            for(int i = 0;i<res.size();i++)
            {
                System.out.print(res.get(i) + " ");
            }
            System.out.println(); 
        }
    }
}

class Solution
{
    public static ArrayList<Integer> findUnion(int arr1[], int arr2[], int n, int m)
    {
        ArrayList<Integer> res = new ArrayList<>();
        Set<Integer> a1 = new TreeSet<>();
        for(int i = 0; i < n; i++)
        {
            a1.add(arr1[i]);
        }
        
        Set<Integer> a2 = new TreeSet<>();   
        for(int i = 0; i < m; i++)
        {
            a2.add(arr2[i]);
        }
        
        Set<Integer> union = new TreeSet<>(a1);
        union.addAll(a2);
        res.addAll(union);
        return res;
    }
}
