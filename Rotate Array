import java.io.*;
import java.util.*;

class GFG 
{
    public static void main(String args[]) throws IOException 
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);

        int t = Integer.parseInt(in.readLine().trim());
        while (t-- > 0) 
        {
            String line = in.readLine();
            String[] tokens = line.split(" ");
            ArrayList<Integer> array = new ArrayList<>();
            for (String token : tokens) 
            {
                array.add(Integer.parseInt(token));
            }

            int d = Integer.parseInt(in.readLine().trim());
            int n = array.size();
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) arr[i] = array.get(i);

            new Solution().rotateArr(arr, d); 
            StringBuilder sb = new StringBuilder();

            for (int value : arr) sb.append(value).append(" ");
            out.println(sb.toString().trim());
            out.println("~");
        }
        out.flush();
        out.close();
    }
}

class Solution 
{
    static void rotateArr(int arr[], int d) 
    {
        int n = arr.length;
        d = d%n;
        if(d == 0 || n <= 1)
        {
            return;
        }
        reverse(arr, 0, d-1);
        reverse(arr, d, n-1);
        reverse(arr, 0, n-1);
    }
    private static void reverse(int[] arr, int start, int end)
    {
        while(start < end)
        {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }
}
