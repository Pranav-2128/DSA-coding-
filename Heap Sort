import java.util.*;
class Heap_Sort
{
    void printArray(int arr[],int n)
    {
        for (int i=0; i<n; ++i)
        {
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    public static void main(String args[])
    {
        Scanner sc  = new Scanner(System.in);
        Heap_Sort hs = new Heap_Sort();
        int arr[] = new int[1000000];
        int T = sc.nextInt();
        while(T>0)
        {
            int n = sc.nextInt();
            for(int i=0;i<n;i++)
            {
                arr[i] = sc.nextInt();
            }    
            Solution ob=new Solution();
            ob.heapSort(arr,n);
            hs.printArray(arr,n);
            T--;
        }
    }
}

class Solution
{
    void buildHeap(int arr[], int n)
    {
        for(int i = n/2-1; i >= 0; i--)
        {
            heapify(arr,n,i);
        }
        
        for(int i = n-1; i >= 0; i--)
        {
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;
            heapify(arr,i,0);
        }
    }
 
    void heapify(int arr[], int n, int i)
    {
        int largest = i;
        int li = 2*i+1;
        int ri = 2*i+2;
        
        if(li<n && arr[li] > arr[largest])
        {
            largest = li;
        }
        
        if(ri<n && arr[ri] > arr[largest])
        {
            largest = ri;
        }
        
        if(largest != i)
        {
            int temp = arr[i];
            arr[i] = arr[largest];
            arr[largest] = temp;
            heapify(arr,n,largest);
        }
    }
    
    public void heapSort(int arr[], int n)
    {
        Solution s = new Solution();
        s.buildHeap(arr,n);
    }
 }
