import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String[] s = br.readLine().trim().split(" ");
            int n = Integer.parseInt(s[0]);
            int[][] grid = new int[n][n];
            for(int i = 0; i < n; i++){
                String[] S = br.readLine().trim().split(" ");
                for(int j = 0; j < n; j++){
                    grid[i][j] = Integer.parseInt(S[j]);
                }
            }
            Solution obj = new Solution();
            int ans = obj.minimumCostPath(grid);
            System.out.println(ans);
        }
    }
}

class Solution
{
    public int minimumCostPath(int[][] grid)
    {
        int m = grid.length , n = grid[0].length;
        int[][] mat = new int[m][n];
        if(m==1 && n==1)return grid[0][0];
        for(int i = 0 ; i<m ; i++){
            for(int j = 0 ; j<n ; j++){
                if(i==0 && j==0) mat[i][j] = grid[0][0];
                else if(i== 0) mat[i][j] =mat[i][j-1]+grid[i][j];
                else if(j== 0) mat[i][j] =mat[i-1][j]+grid[i][j];
                else{
                    mat[i][j] = Math.min(mat[i-1][j]+grid[i][j] ,mat[i][j-1]+ grid[i][j]);
                }
            }
        }
        return mat[m-1][n-1];
    }
}
